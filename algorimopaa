#include <iostream>
using namespace std;

void quickSort(int vet[], int esq, int dir)
{
    int inicio, meio, fim, pivo, aux;
    inicio=esq;
    fim=dir;
    meio=(esq+dir)/2;
    pivo=vet[meio];
    while(inicio<fim)
    {
        while (vet[inicio]<pivo)
        {
            inicio++;
        }
        while(vet[fim]>pivo)
        {
            fim--;
        }
        if (inicio<fim)
        {
            aux=vet[inicio];
            vet[inicio]=vet[fim];
            vet[fim]=aux;
        }
        inicio++;
        fim--;
    }
    if(fim>esq)
    {
        quickSort(vet,esq,fim);
    }
    if(inicio<dir)
    {
        quickSort(vet,inicio+1,dir);
    }
}

void mostrar(int vet[], int tam)
{
    int i;
    for (i = 0; i < tam; i++)
    {
        cout << vet[i] << " , ";
    }
}

int main()
{
    int vet[] = { 9 , 10 , -1, 3, 6, 2, 1, -3, 1, 0, -2, 15, 8, -7, 0 };
    int tam;
    
    tam  = sizeof(vet) / sizeof(vet[0]);
        cout << "O vetor original e: ";
    mostrar(vet, tam);
        cout << endl;
    quickSort(vet, 0, tam);
        cout << "O vetor ordenado e: ";
    mostrar(vet, tam);
        cout << endl;
}
